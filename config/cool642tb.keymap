#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        comb2 {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb3 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <22 23>;
        };

        comb4 {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        comb5 {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <9 8>;
            timeout-ms = <0>;
            layers = <2>;
        };

        next_window {
            bindings = <&kp LG(TAB)>;
            key-positions = <18 13>;
        };

        back_window {
            bindings = <&kp RS(TAB)>;
            key-positions = <18 12>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                     &kp W             &kp E                   &kp R                   &kp T                                  &kp Y                  &kp U           &kp I      &kp O       &kp P
&kp A                     &kp S             &kp D                   &lt 3 F                 &kp G      &to 1           &kp ESC     &kp H                  &mt LEFT_GUI J  &kp K      &kp L       &kp BACKSPACE
&kp Z                     &kp X             &kp C                   &kp V                   &kp B      &mkp MB1        &kp TAB     &kp N                  &kp M           &kp COMMA  &kp PERIOD  &kp MINUS
&mt LEFT_SHIFT LS(SPACE)  &kp LEFT_CONTROL  &mt LEFT_ALT LA(SPACE)  &mt LEFT_GUI LG(SPACE)  &kp SPACE  &lt 1 CAPSLOCK  &lt 2 CAPS  &mt ENTER RIGHT_SHIFT                                         &kp BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM1 {
            bindings = <
&kp N1          &kp N2        &kp N3         &kp N4        &kp N5                             &kp N6                 &kp N7     &kp N8            &kp N9             &kp N0
&bt BT_SEL 0    &bt BT_SEL 1  &kp SEMICOLON  &kp UP_ARROW  &kp SQT    &to 0       &kp ESCAPE  &kp SLASH              &none      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSPACE
&bt BT_SEL 2    &bt BT_SEL 3  &kp LEFT       &kp DOWN      &kp RIGHT  &mkp MB2    &kp TAB     &kp GRAVE              &kp EQUAL  &kp COMMA         &kp PERIOD         &kp MINUS
&kp LEFT_SHIFT  &kp LCTRL     &kp LEFT_ALT   &kp LCMD      &kp SPACE  &lt 1 CAPS  &lt 2 CAPS  &mt ENTER RIGHT_SHIFT                                                  &kp BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp LG(PLUS) LG(MINUS)>;
        };

        NUM2 {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN       &kp HASH            &kp DOLLAR          &kp PERCENT                                  &kp CARET              &kp AMPERSAND  &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&bt BT_SEL 0     &bt BT_SEL 1      &kp DOUBLE_QUOTES   &kp LC(UP_ARROW)    &kp COLON            &kp N1      &kp ESCAPE  &kp QUESTION           &none          &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSPACE
&bt BT_SEL 2     &bt BT_SEL 3      &kp LC(LEFT_ARROW)  &kp LC(DOWN_ARROW)  &kp LC(RIGHT_ARROW)  &mkp MB3    &kp TAB     &kp TILDE              &kp PLUS       &kp LESS_THAN   &kp GREATER_THAN      &kp UNDERSCORE
&kp LEFT_SHIFT   &kp LEFT_CONTROL  &kp LEFT_ALT        &kp RGUI            &kp SPACE            &lt 1 CAPS  &lt 2 CAPS  &mt RIGHT_SHIFT ENTER                                                       &kp PIPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_UP>;
        };

        screen {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans                      &kp LA(LC(U))  &kp LA(LC(I))      &trans                       &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LA(LC(LG(LEFT_ARROW)))  &kp LA(LC(J))  &kp LA(LC(K))      &kp LA(LC(LG(RIGHT_ARROW)))  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LC(LG(F))               &kp LA(LC(M))  &kp LA(LC(COMMA))  &trans                       &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                                                                     &trans
            >;
        };
    };
};
